function cov_yvc29mrct(){var path="C:\\capstoneRestAPis\\models\\User.js";var hash="2381ccf6bf0646646ca2ba6f3bdbd5f78ab3cdcd";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\capstoneRestAPis\\models\\User.js",statementMap:{"0":{start:{line:1,column:17},end:{line:1,column:36}},"1":{start:{line:2,column:20},end:{line:2,column:40}},"2":{start:{line:3,column:15},end:{line:3,column:32}},"3":{start:{line:5,column:19},end:{line:18,column:2}},"4":{start:{line:21,column:0},end:{line:27,column:3}},"5":{start:{line:23,column:17},end:{line:23,column:39}},"6":{start:{line:25,column:4},end:{line:25,column:58}},"7":{start:{line:26,column:4},end:{line:26,column:11}},"8":{start:{line:30,column:0},end:{line:40,column:1}},"9":{start:{line:31,column:17},end:{line:31,column:46}},"10":{start:{line:32,column:4},end:{line:38,column:5}},"11":{start:{line:33,column:21},end:{line:33,column:66}},"12":{start:{line:34,column:8},end:{line:36,column:9}},"13":{start:{line:35,column:12},end:{line:35,column:24}},"14":{start:{line:37,column:8},end:{line:37,column:42}},"15":{start:{line:39,column:4},end:{line:39,column:35}},"16":{start:{line:42,column:13},end:{line:42,column:47}},"17":{start:{line:44,column:0},end:{line:44,column:22}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:21,column:23},end:{line:21,column:24}},loc:{start:{line:21,column:44},end:{line:27,column:1}},line:21},"1":{name:"(anonymous_1)",decl:{start:{line:30,column:27},end:{line:30,column:28}},loc:{start:{line:30,column:59},end:{line:40,column:1}},line:30}},branchMap:{"0":{loc:{start:{line:32,column:4},end:{line:38,column:5}},type:"if",locations:[{start:{line:32,column:4},end:{line:38,column:5}},{start:{line:32,column:4},end:{line:38,column:5}}],line:32},"1":{loc:{start:{line:34,column:8},end:{line:36,column:9}},type:"if",locations:[{start:{line:34,column:8},end:{line:36,column:9}},{start:{line:34,column:8},end:{line:36,column:9}}],line:34}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"2381ccf6bf0646646ca2ba6f3bdbd5f78ab3cdcd"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_yvc29mrct=function(){return actualCoverage;};}return actualCoverage;}cov_yvc29mrct();const mongoose=(cov_yvc29mrct().s[0]++,require('mongoose'));const{isEmail}=(cov_yvc29mrct().s[1]++,require('validator'));const bcrypt=(cov_yvc29mrct().s[2]++,require('bcrypt'));const userSchema=(cov_yvc29mrct().s[3]++,new mongoose.Schema({email:{type:String,required:[true,'Please enter an email'],unique:true,lowercase:[true,'The email should be in lower case letters'],validate:[isEmail,'Please enter a valid email']},password:{type:String,required:[true,'Please enter a password'],minlength:[8,'Minimum password length is 8 characters']}}));//this will be fired before the user is saved
//password hashing
cov_yvc29mrct().s[4]++;userSchema.pre('save',async function(next){cov_yvc29mrct().f[0]++;//generating a string to be attached to the password before hashing it
const salt=(cov_yvc29mrct().s[5]++,await bcrypt.genSalt());//hashing the password
cov_yvc29mrct().s[6]++;this.password=await bcrypt.hash(this.password,salt);cov_yvc29mrct().s[7]++;next();//without next the code doen's go on
});//static method to log users in
cov_yvc29mrct().s[8]++;userSchema.statics.login=async function(email,password){cov_yvc29mrct().f[1]++;const user=(cov_yvc29mrct().s[9]++,await this.findOne({email}));cov_yvc29mrct().s[10]++;if(user){cov_yvc29mrct().b[0][0]++;const auth=(cov_yvc29mrct().s[11]++,await bcrypt.compare(password,user.password));cov_yvc29mrct().s[12]++;if(auth){cov_yvc29mrct().b[1][0]++;cov_yvc29mrct().s[13]++;return user;}else{cov_yvc29mrct().b[1][1]++;}cov_yvc29mrct().s[14]++;throw Error('Incorrect password');}else{cov_yvc29mrct().b[0][1]++;}cov_yvc29mrct().s[15]++;throw Error('Incorrect email');};const User=(cov_yvc29mrct().s[16]++,mongoose.model('user',userSchema));cov_yvc29mrct().s[17]++;module.exports=User;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXIuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiaXNFbWFpbCIsImJjcnlwdCIsInVzZXJTY2hlbWEiLCJTY2hlbWEiLCJlbWFpbCIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsInVuaXF1ZSIsImxvd2VyY2FzZSIsInZhbGlkYXRlIiwicGFzc3dvcmQiLCJtaW5sZW5ndGgiLCJwcmUiLCJuZXh0Iiwic2FsdCIsImdlblNhbHQiLCJoYXNoIiwic3RhdGljcyIsImxvZ2luIiwidXNlciIsImZpbmRPbmUiLCJhdXRoIiwiY29tcGFyZSIsIkVycm9yIiwiVXNlciIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IjQwRUFlWTt5RkFmWixLQUFNQSxDQUFBQSxRQUFRLHlCQUFHQyxPQUFPLENBQUMsVUFBRCxDQUFWLENBQWQsQ0FDQSxLQUFNLENBQUVDLE9BQUYsMEJBQWNELE9BQU8sQ0FBQyxXQUFELENBQXJCLENBQU4sQ0FDQSxLQUFNRSxDQUFBQSxNQUFNLHlCQUFHRixPQUFPLENBQUMsUUFBRCxDQUFWLENBQVosQ0FFQSxLQUFNRyxDQUFBQSxVQUFVLHlCQUFHLEdBQUlKLENBQUFBLFFBQVEsQ0FBQ0ssTUFBYixDQUFvQixDQUNuQ0MsS0FBSyxDQUFFLENBQ0hDLElBQUksQ0FBQ0MsTUFERixDQUVIQyxRQUFRLENBQUUsQ0FBQyxJQUFELENBQU8sdUJBQVAsQ0FGUCxDQUdIQyxNQUFNLENBQUUsSUFITCxDQUlIQyxTQUFTLENBQUUsQ0FBQyxJQUFELENBQU8sMkNBQVAsQ0FKUixDQUtIQyxRQUFRLENBQUUsQ0FBQ1YsT0FBRCxDQUFVLDRCQUFWLENBTFAsQ0FENEIsQ0FRbkNXLFFBQVEsQ0FBRSxDQUNOTixJQUFJLENBQUVDLE1BREEsQ0FFTkMsUUFBUSxDQUFFLENBQUMsSUFBRCxDQUFPLHlCQUFQLENBRkosQ0FHTkssU0FBUyxDQUFFLENBQUMsQ0FBRCxDQUFJLHlDQUFKLENBSEwsQ0FSeUIsQ0FBcEIsQ0FBSCxDQUFoQixDQWNBO0FBQ0E7dUJBQ0FWLFVBQVUsQ0FBQ1csR0FBWCxDQUFlLE1BQWYsQ0FBdUIsZUFBZ0JDLElBQWhCLENBQXFCLHdCQUN4QztBQUNBLEtBQU1DLENBQUFBLElBQUkseUJBQUcsS0FBTWQsQ0FBQUEsTUFBTSxDQUFDZSxPQUFQLEVBQVQsQ0FBVixDQUNBO0FBSHdDLHVCQUl4QyxLQUFLTCxRQUFMLENBQWUsS0FBTVYsQ0FBQUEsTUFBTSxDQUFDZ0IsSUFBUCxDQUFZLEtBQUtOLFFBQWpCLENBQTJCSSxJQUEzQixDQUFyQixDQUp3Qyx1QkFLeENELElBQUksR0FBRztBQUNWLENBTkQsRUFRQTt1QkFDQVosVUFBVSxDQUFDZ0IsT0FBWCxDQUFtQkMsS0FBbkIsQ0FBMkIsZUFBZWYsS0FBZixDQUFzQk8sUUFBdEIsQ0FBZ0Msd0JBQ3ZELEtBQU1TLENBQUFBLElBQUkseUJBQUcsS0FBTSxNQUFLQyxPQUFMLENBQWEsQ0FBRWpCLEtBQUYsQ0FBYixDQUFULENBQVYsQ0FEdUQsd0JBRXZELEdBQUdnQixJQUFILENBQVMsMkJBQ0wsS0FBTUUsQ0FBQUEsSUFBSSwwQkFBRyxLQUFNckIsQ0FBQUEsTUFBTSxDQUFDc0IsT0FBUCxDQUFlWixRQUFmLENBQXlCUyxJQUFJLENBQUNULFFBQTlCLENBQVQsQ0FBVixDQURLLHdCQUVMLEdBQUdXLElBQUgsQ0FBUyxtREFDTCxNQUFPRixDQUFBQSxJQUFQLENBQ0gsQ0FGRCxnQ0FGSyx3QkFLTCxLQUFNSSxDQUFBQSxLQUFLLENBQUMsb0JBQUQsQ0FBWCxDQUNILENBTkQsZ0NBRnVELHdCQVN2RCxLQUFNQSxDQUFBQSxLQUFLLENBQUMsaUJBQUQsQ0FBWCxDQUNILENBVkQsQ0FZQSxLQUFNQyxDQUFBQSxJQUFJLDBCQUFHM0IsUUFBUSxDQUFDNEIsS0FBVCxDQUFlLE1BQWYsQ0FBdUJ4QixVQUF2QixDQUFILENBQVYsQyx3QkFFQXlCLE1BQU0sQ0FBQ0MsT0FBUCxDQUFpQkgsSUFBakIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcbmNvbnN0IHsgaXNFbWFpbCB9ID0gcmVxdWlyZSgndmFsaWRhdG9yJyk7XHJcbmNvbnN0IGJjcnlwdCA9IHJlcXVpcmUoJ2JjcnlwdCcpO1xyXG5cclxuY29uc3QgdXNlclNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xyXG4gICAgZW1haWw6IHtcclxuICAgICAgICB0eXBlOlN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogW3RydWUsICdQbGVhc2UgZW50ZXIgYW4gZW1haWwnXSxcclxuICAgICAgICB1bmlxdWU6IHRydWUsXHJcbiAgICAgICAgbG93ZXJjYXNlOiBbdHJ1ZSwgJ1RoZSBlbWFpbCBzaG91bGQgYmUgaW4gbG93ZXIgY2FzZSBsZXR0ZXJzJ10sXHJcbiAgICAgICAgdmFsaWRhdGU6IFtpc0VtYWlsLCAnUGxlYXNlIGVudGVyIGEgdmFsaWQgZW1haWwnXVxyXG4gICAgfSxcclxuICAgIHBhc3N3b3JkOiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgIHJlcXVpcmVkOiBbdHJ1ZSwgJ1BsZWFzZSBlbnRlciBhIHBhc3N3b3JkJ10sXHJcbiAgICAgICAgbWlubGVuZ3RoOiBbOCwgJ01pbmltdW0gcGFzc3dvcmQgbGVuZ3RoIGlzIDggY2hhcmFjdGVycyddXHJcbiAgICB9XHJcbn0pO1xyXG4vL3RoaXMgd2lsbCBiZSBmaXJlZCBiZWZvcmUgdGhlIHVzZXIgaXMgc2F2ZWRcclxuLy9wYXNzd29yZCBoYXNoaW5nXHJcbnVzZXJTY2hlbWEucHJlKCdzYXZlJywgYXN5bmMgZnVuY3Rpb24gKG5leHQpe1xyXG4gICAgLy9nZW5lcmF0aW5nIGEgc3RyaW5nIHRvIGJlIGF0dGFjaGVkIHRvIHRoZSBwYXNzd29yZCBiZWZvcmUgaGFzaGluZyBpdFxyXG4gICAgY29uc3Qgc2FsdCA9IGF3YWl0IGJjcnlwdC5nZW5TYWx0KCk7XHJcbiAgICAvL2hhc2hpbmcgdGhlIHBhc3N3b3JkXHJcbiAgICB0aGlzLnBhc3N3b3JkPSBhd2FpdCBiY3J5cHQuaGFzaCh0aGlzLnBhc3N3b3JkLCBzYWx0KTtcclxuICAgIG5leHQoKTsvL3dpdGhvdXQgbmV4dCB0aGUgY29kZSBkb2VuJ3MgZ28gb25cclxufSk7XHJcblxyXG4vL3N0YXRpYyBtZXRob2QgdG8gbG9nIHVzZXJzIGluXHJcbnVzZXJTY2hlbWEuc3RhdGljcy5sb2dpbiA9IGFzeW5jIGZ1bmN0aW9uKGVtYWlsLCBwYXNzd29yZCkge1xyXG4gICAgY29uc3QgdXNlciA9IGF3YWl0IHRoaXMuZmluZE9uZSh7IGVtYWlsIH0pO1xyXG4gICAgaWYodXNlcikge1xyXG4gICAgICAgIGNvbnN0IGF1dGggPSBhd2FpdCBiY3J5cHQuY29tcGFyZShwYXNzd29yZCwgdXNlci5wYXNzd29yZCk7XHJcbiAgICAgICAgaWYoYXV0aCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdXNlcjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhyb3cgRXJyb3IoJ0luY29ycmVjdCBwYXNzd29yZCcpO1xyXG4gICAgfVxyXG4gICAgdGhyb3cgRXJyb3IoJ0luY29ycmVjdCBlbWFpbCcpO1xyXG59XHJcblxyXG5jb25zdCBVc2VyID0gbW9uZ29vc2UubW9kZWwoJ3VzZXInLCB1c2VyU2NoZW1hKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gVXNlcjsiXX0=